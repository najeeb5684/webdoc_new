

plugins {
    id "com.android.application"
    id 'com.google.gms.google-services' // Keep if using Firebase
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'kotlin-kapt' // **Add this line**
}
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.webdoc.health"
    compileSdk 36
    ndkVersion '25.1.8937393'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId = "com.webdoc.health"
        minSdk = 28
        targetSdk = 36
        versionCode = 20
        versionName = "1.1.9"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                storeFile = file(keystoreProperties["storeFile"])
                storePassword = keystoreProperties["storePassword"]
                keyAlias = keystoreProperties["keyAlias"]
                keyPassword = keystoreProperties["keyPassword"]
            }
        }
    }

    buildTypes {
        release {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            } else {
                signingConfig signingConfigs.debug
                minifyEnabled false
                shrinkResources false
            }
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    buildFeatures {
        viewBinding true
    }

    aaptOptions {
        cruncherEnabled = false
    }

    packagingOptions {
        exclude 'source_tips'
    }
}

flutter {
    source = "../.."
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterBuildDir = localProperties.getProperty('flutter.buildDir')
def kotlin_version = '2.2.0'
def room_version = "2.4.0"
def android_plugin_version = "4.0.0"

dependencies {
    implementation "androidx.appcompat:appcompat:1.7.1"
    implementation "com.google.android.material:material:1.12.0"
    implementation "androidx.multidex:multidex:2.0.1"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'

    // USE THIS: Find Flutter embedding within the local SDK
    if (flutterBuildDir != null) {
        implementation fileTree(dir: flutterBuildDir + '/intermediates/flutter/debug', include: ['*.jar'])
    } else {
        println "flutter.buildDir property not found in local.properties"
    }

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    kapt "androidx.room:room-compiler:$room_version"
    kapt "com.android.databinding:compiler:$android_plugin_version"

    // Facebook SDK
    implementation 'com.facebook.android:facebook-android-sdk:latest.release'
}
